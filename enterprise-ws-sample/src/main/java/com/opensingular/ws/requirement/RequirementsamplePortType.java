
package com.opensingular.ws.requirement;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RequirementsamplePortType", targetNamespace = "com.opensingular")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RequirementsamplePortType {


    /**
     * 
     * @param requirementsampleRequest
     * @return
     *     returns com.opensingular.ws.requirement.RequirementsampleResponse
     */
    @WebMethod(action = "urn:sendRequirementsample")
    @WebResult(name = "RequirementsampleResponse", targetNamespace = "com.opensingular", partName = "RequirementsampleResponse")
    public RequirementsampleResponse sendRequirementsample(
        @WebParam(name = "RequirementsampleRequest", targetNamespace = "com.opensingular", partName = "RequirementsampleRequest")
        RequirementsampleRequest requirementsampleRequest);

    /**
     * 
     * @param requirementsamplePendingRequest
     * @return
     *     returns com.opensingular.ws.requirement.RequirementsamplePendingResponse
     */
    @WebMethod(action = "urn:checkPendingRequirementsample")
    @WebResult(name = "RequirementsamplePendingResponse", targetNamespace = "com.opensingular", partName = "RequirementsamplePendingResponse")
    public RequirementsamplePendingResponse checkPendingRequirementsample(
        @WebParam(name = "RequirementsamplePendingRequest", targetNamespace = "com.opensingular", partName = "RequirementsamplePendingRequest")
        RequirementsamplePendingRequest requirementsamplePendingRequest);

}
